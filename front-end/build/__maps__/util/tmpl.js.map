{"version":3,"sources":["tmpl.js"],"names":["render","renderBefore","renderTo","renderInto","renderSwitch","renderEach","renderEachBefore","renderEachTo","renderEachInto","renderEachSwitch","tmplCache","tempTextarea","$","BEFORE","AFTER","verbatim","tags","getTmpl","id","str","html","text","parse","tmplId","data","partials","isFunction","$target","rest","prependTo","appendTo","direction","map","item","join"],"mappings":"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","file":"../../util/tmpl.js","sourcesContent":["import Mustache from 'mustache'\nimport 'jquery'\n\nconst tmplCache = {}\n\nconst tempTextarea = $('<textarea />')\n\nexport const BEFORE = 'before'\nexport const AFTER = 'after'\n\nexport const verbatim = () => {\n    Mustache.tags = ['[[', ']]']\n}\n\nexport const getTmpl = id => {\n    if (tmplCache[id]) return tmplCache[id]\n\n    let str = tmplCache[id] = tempTextarea.html($(`#tmpl-${id}`).html()).text()\n    Mustache.parse(str)\n    return str\n}\n\nexport function render (tmplId, data, partials) {\n    if ($.isFunction(tmplId)) tmplId = tmplId(data)\n\n    return Mustache.render(getTmpl(tmplId), data, partials)\n}\n\nexport function renderBefore ($target, ...rest) {\n    return $(render(...rest)).prependTo($target)\n}\n\nexport function renderTo ($target, ...rest) {\n    return $(render(...rest)).appendTo($target)\n}\n\nexport function renderInto ($target, ...rest) {\n    $($target).html(render(...rest))\n}\n\nexport function renderSwitch (direction, ...rest) {\n    return (direction === BEFORE ? renderBefore : renderTo)(...rest)\n}\n\nexport function renderEach (tmplId, data, partials) {\n    return data\n        .map(item => render(tmplId, item, partials))\n        .join('')\n}\n\nexport function renderEachBefore ($target, ...rest) {\n    return $(renderEach(...rest)).prependTo($target)\n}\n\nexport function renderEachTo ($target, ...rest) {\n    return $(renderEach(...rest)).appendTo($target)\n}\n\nexport function renderEachInto ($target, ...rest) {\n    $($target).html(renderEach(...rest))\n}\n\nexport function renderEachSwitch (direction, ...rest) {\n    return (direction === BEFORE ? renderEachBefore : renderEachTo)(...rest)\n}\n"]}