{"version":3,"sources":["attachments.js"],"names":["Upload","tmpl","timeago","ProxyFile","uploader","data","fileObject","_uploader","_fileObject","_data","_init","prototype","_uploading","add","proxyFile","_render","_setData","_$el","renderBefore","_$fileBox","_tmpl","find","click","_destroy","bind","attr","created","_$formInput","$","id","appendTo","_$form","abort","remove","delete","ok","$button","$noFiles","$form","$progress","initialAPI","$fileBox","_$button","_$noFiles","_$progress","_initialAPI","_proxyFiles","_eventBus","_loadInitial","fileupload","url","dataType","maxFileSize","on","e","_setButtonState","file","files","trigger","result","_uploaded","loaded","total","_progress","parseInt","_setProgress","value","setTimeout","toggleClass","prop","get","forEach","item","_setNoFiles","length","state","percent","css","name","cb","rest","abortAll","slice","push","index","indexOf","splice"],"mappings":"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","file":"../../util/attachments.js","sourcesContent":["import 'file-upload'\nimport API from 'util/rest'\nimport * as tmpl from 'util/tmpl'\nimport * as timeago from 'timeago'\n\n// `ProxyFile` Class Definition\n\nfunction ProxyFile ({ uploader, data = null, fileObject = null }) {\n    this._uploader = uploader\n    this._fileObject = fileObject\n    this._data = data\n\n    this._init()\n}\n\nProxyFile.prototype = {\n\n    _init () {\n        this._uploading = !!this._fileObject\n        this._uploader.add(this)\n        if (this._uploading) this._fileObject.proxyFile = this\n\n        this._render()\n        this._setData()\n    },\n\n    _render () {\n        this._$el = tmpl.renderBefore(\n            this._uploader._$fileBox,\n            this._uploader._tmpl,\n            this._fileObject || this._data\n        )\n\n        this._$el.find('.file-cancel').click(this._destroy.bind(this))\n    },\n\n    _setData (data = null) {\n        if (data) {\n            this._data = data\n            this._uploading = false\n        }\n        if (!this._$el || !this._data) return\n\n        this._$el.find('.timeago').attr('datetime', this._data.created)\n        timeago.bind()\n\n        this._$formInput = $(`<input type=\"hidden\" />`)\n            .attr('name', 'attachments[]').attr('value', this._data.id)\n            .appendTo(this._uploader._$form)\n    },\n\n    _destroy () {\n        if (this._uploading) {\n            this._fileObject.abort()\n            this._uploader.remove(this)\n        } else {\n            new API(`/api/attachments/${this._data.id}/`).delete()\n                .ok(() => {\n                    this._$formInput.remove()\n                    this._uploader.remove(this)\n                })\n        }\n        this._$el.remove()\n    }\n}\n\n\n\n// `Upload` Class Definition\n\nexport function Upload ({ $button, $noFiles = null, $form, $progress, initialAPI, $fileBox, tmpl }) {\n    this._$button = $($button)\n    this._$noFiles = $($noFiles)\n    this._$form = $($form)\n\n    this._$progress = $($progress)\n    this._initialAPI = initialAPI\n    this._$fileBox = $($fileBox)\n    this._proxyFiles = []\n    this._tmpl = tmpl\n\n    this._eventBus = $({})\n\n    this._init()\n}\n\nUpload.prototype = {\n\n    _init () {\n        this._loadInitial()\n\n        this._$button.find('input[type=file]').fileupload({\n            url: '/api/attachments/',\n            dataType: 'json',\n            maxFileSize: 10000000\n        })\n        .on('fileuploadadd', (e, data) => {\n            this._setButtonState(true)\n\n            let file = data.files[0]\n            file.abort = () => data.abort()\n\n            new ProxyFile({\n                uploader: this,\n                fileObject: file\n            })\n\n            this._eventBus.trigger('start')\n        })\n        .on('fileuploaddone', (e, { result, files: [fileObject] }) => this._uploaded(fileObject, result))\n        .on('fileuploadprogressall', (e, { loaded, total }) => this._progress(parseInt(loaded / total * 100, 10)))\n        .on('fileuploadalways', () => {\n            this._setProgress(0)\n            this._setButtonState(false)\n            this._eventBus.trigger('always')\n        })\n    },\n\n    _setButtonState (value) {\n        setTimeout(() => {\n            this._$button.toggleClass('disabled', value).find('input').prop('disabled', value)\n        }, 100)\n    },\n\n    _loadInitial () {\n        if (!this._initialAPI) return\n        new API(this._initialAPI).get().ok(data => {\n            data.forEach(item => new ProxyFile({\n                uploader: this,\n                data: item\n            }))\n        })\n    },\n\n    _setNoFiles () {\n        if (!this._$noFiles.length) return\n\n        let state = !this._proxyFiles.length\n\n        this._$noFiles[state ? 'show': 'hide']()\n    },\n\n    _uploaded (fileObject, data) {\n        fileObject.proxyFile._setData(data)\n        this._eventBus.trigger('uploaded', data)\n    },\n\n    _progress (percent) {\n        this._setProgress(percent)\n    },\n\n    _setProgress (percent) {\n        this._$progress.css('width', `${percent}%`)\n    },\n\n    on (name, cb) {\n        this._eventBus.on(name, (e, ...rest) => cb(...rest))\n        return this\n    },\n\n    abortAll () {\n        this._proxyFiles.slice().forEach(file => file._destroy())\n    },\n\n    add (proxyFile) {\n        this._proxyFiles.push(proxyFile)\n        this._setNoFiles()\n    },\n\n    remove (proxyFile) {\n        let index = this._proxyFiles.indexOf(proxyFile)\n        if (index < 0) return\n        this._proxyFiles.splice(index, 1)\n        this._setNoFiles()\n    }\n}\n"]}