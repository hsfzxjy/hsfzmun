{"version":3,"sources":["rest.js"],"names":["$","ajaxSetup","cache","dataType","updateQueryStringParameter","uri","key","value","re","RegExp","separator","indexOf","match","replace","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","jQuery","trim","substring","decodeURIComponent","csrftoken","csrfSafeMethod","method","test","beforeSend","xhr","settings","type","crossDomain","setRequestHeader","JSON_TYPE","STATUSES","paramerror","unauthorized","forbidden","notfound","ok","servererror","API","url","params","extend","contentType","prototype","param","newObj","isPlainObject","json","formdata","undefined","currentUrl","each","currentParamString","_request","payload","JSON","stringify","_processResponse","ajax","data","response","codes","callbacks","Callbacks","add","cb","always","status","fire","responseJSON","_"],"mappings":"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","file":"../../util/rest.js","sourcesContent":["import 'jquery'\n\n$.ajaxSetup({\n    cache: false,\n    dataType: 'json'\n})\n\n// Helper Functions\n\nfunction updateQueryStringParameter (uri, key, value) {\n    let re = new RegExp(`([?&])${key}=.*?(&|$|#)`, \"i\")\n    let separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\"\n    return (uri.match(re)) ? uri.replace(re, `$1${key}=${value}$2`) : `${uri}${separator}${key}=${value}`\n}\n\n// Setup CSRF Token\n\nfunction getCookie (name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        let cookies = document.cookie.split(';')\n        for (let i = 0; i < cookies.length; i++) {\n            let cookie = jQuery.trim(cookies[i])\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1))\n                break\n            }\n        }\n    }\n    return cookieValue\n}\nlet csrftoken = getCookie('csrftoken')\n\nfunction csrfSafeMethod(method) {\n    // these HTTP methods do not require CSRF protection\n    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method))\n}\n\n$.ajaxSetup({\n    beforeSend: function (xhr, settings) {\n        if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n            xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n        }\n    }\n})\n\n// `API` Definition\n\nconst JSON_TYPE = 'application/json'\nconst STATUSES = {\n    paramerror: [400],\n    unauthorized: [401],\n    forbidden: [403],\n    notfound: [404],\n    ok: [200, 201, 204],\n    servererror: [500]\n}\nfunction API (url) {\n    if (url instanceof API) {\n        this.url = url.url\n        this.params = $.extend({}, url.params)\n        this.contentType = url.contentType\n    } else {\n        this.url = url\n        this.params = {}\n        this.contentType = JSON_TYPE\n    }\n}\nAPI.prototype = {\n\n    param (name, value) {\n        let newObj = new API(this)\n\n        if ($.isPlainObject(name))\n            $.extend(newObj.params, name)\n        else\n            newObj.params[name] = value\n\n        return newObj\n    },\n    json () {\n        this.contentType = JSON_TYPE\n    },\n    formdata () {\n        this.contentType = undefined\n    },\n    currentUrl () {\n        let url = this.url\n        $.each(this.params, (key, value) =>\n            url = updateQueryStringParameter(url, key, value)\n        )\n        return url\n    },\n    currentParamString () {\n        let url = this.currentUrl()\n        return (url.split('?')[1] || '')\n    },\n    _request (method, payload) {\n        if (this.contentType === JSON_TYPE)\n            payload = JSON.stringify(payload)\n\n        $.each(this.params, (key, value) =>\n            this.url = updateQueryStringParameter(this.url, key, value)\n        )\n\n        return this._processResponse($.ajax({\n            url: this.url,\n            type: method,\n            contentType: this.contentType,\n            data: payload\n        }))\n    },\n    _processResponse (response) {\n        $.each(STATUSES, (name, codes) => {\n            let callbacks = $.Callbacks()\n            // bind shortcuts to response\n            response[name] = cb => {\n                callbacks.add(cb)\n                return response\n            }\n            // fire callbacks according to status code\n            response.always(() => {\n                if (codes.indexOf(response.status) >= 0) {\n                    callbacks.fire(response.responseJSON || {}, response)\n                }\n            })\n        })\n\n        return response\n    }\n}\n\n$(['get', 'post', 'put', 'patch', 'delete']).each((_, name) =>\n    API.prototype[name] = function (payload) {\n        return this._request(name, payload)\n    }\n)\n\nexport default API\n"]}