{"version":3,"sources":["form.js"],"names":["elHasNames","el","keys","some","name","attr","getFormPayload","$form","payload","serializeArray","forEach","value","matched","exec","undefined","isArray","push","getFeedBackElement","$el","$siblings","siblings","length","show","insertAfter","setErrors","data","Object","filter","_","each","html","join","parent","addClass","clearErrors","hide","removeClass","clearFormValues","find","val","Form","api","action","clearForm","_$el","_$submitButtons","_api","_action","_clearForm","_init","prototype","submit","e","preventDefault","stopPropagation","_onSubmit","_eventBus","cb","on","rest","submitted","getPayload","trigger","_toggleButtons","prop","response","always","paramerror","ok"],"mappings":"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","file":"../../util/form.js","sourcesContent":["import $ from 'jquery'\n\nimport API from 'util/rest'\n\n// Helper Functions\n\nconst elHasNames = (el, keys) => keys.some(name => name == $(el).attr('name'))\n\nfunction getFormPayload ($form) {\n    let payload = {}\n    $form.serializeArray()\n        .forEach(({name, value}) => {\n            let matched = /^(.*)\\[\\]$/.exec(name)\n            if (matched) name = matched[1]\n\n            if (payload[name] === undefined)\n                payload[name] = matched ? [value] : value\n            else if (!$.isArray(payload[name]))\n                payload[name] = [payload[name], value]\n            else\n                payload[name].push(value)\n        })\n    return payload\n}\n\nfunction getFeedBackElement (el) {\n    let $el = $(el)\n    let $siblings = $el.siblings('.form-control-feedback')\n    return $siblings.length\n        ? $siblings.show()\n        : $(`<div class=\"form-control-feedback\" />`).insertAfter($el)\n}\n\nfunction setErrors ($form, data) {\n    const keys = Object.keys(data)\n    $('.form-group input, .form-group textarea', $form)\n        .filter((_, el) => elHasNames(el, keys))\n    .each((_, el) => {\n        let $el = $(el)\n        let name = $el.attr('name')\n        getFeedBackElement($el).html(data[name].join(' '))\n        $el.parent().addClass('has-danger')\n    })\n}\n\nfunction clearErrors ($form) {\n    $('.form-control-feedback', $form).hide()\n    $('.form-group', $form).removeClass('has-danger')\n}\n\nfunction clearFormValues ($form) {\n    $form.find('input[type=text], textarea').val('')\n}\n\n// `Form` Class Definition\n\nfunction Form ($el, api, action, clearForm = true) {\n    this._$el = $($el)\n    this._$submitButtons = $('[type=submit]', this._$el)\n    this._api = new API(api)\n    this._action = action\n    this._clearForm = clearForm\n    this._init()\n}\n\nForm.prototype = {\n\n    _init () {\n        this._$el.submit(e => {\n            e.preventDefault()\n            e.stopPropagation()\n            this._onSubmit()\n        })\n        this._eventBus = $({})\n    },\n    payload (cb) {\n        this._eventBus.on('finalize-payload', (e, ...rest) => cb(...rest))\n        return this\n    },\n    submitted (cb) {\n        this._eventBus.on('submitted', (e, ...rest) => cb(...rest))\n        return this\n    },\n    getPayload () {\n        let payload = getFormPayload(this._$el)\n        this._eventBus.trigger('finalize-payload', payload)\n        return payload\n    },\n    _toggleButtons (value) {\n        this._$submitButtons.prop('disabled', value)\n    },\n    _onSubmit () {\n        this._toggleButtons(true)\n        clearErrors(this._$el)\n\n        let response = this._api[this._action](this.getPayload())\n        this._eventBus.trigger('submitted', response)\n\n        response\n            .always(() => this._toggleButtons(false))\n            .paramerror(data => setErrors(this._$el, data))\n            .ok(() => {\n                if (this._clearForm) clearFormValues(this._$el)\n            })\n    }\n}\n\nexport default Form\n"]}