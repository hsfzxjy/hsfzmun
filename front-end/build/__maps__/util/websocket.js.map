{"version":3,"sources":["websocket.js"],"names":["socket","eventBus","$","connect","WebSocket","location","host","addEventListener","event","trigger","data","object","JSON","parse","type","undefined","on","name","cb","console","log","e","rest","message","subscribe","open","close","error","send","stringify"],"mappings":";;;;;;;;;;;;;;;AAIA,QAAIA,eAAJ;AACA,QAAMC,WAAWC,EAAE,EAAF,CAAjB;;AAEA,QAAIC,WAAU,sBAAS,YAAY;AAC/BH,iBAAS,IAAII,SAAJ,WAAsBC,SAASC,IAA/B,sBAAT;AACAN,eAAOO,gBAAP,CAAwB,MAAxB,EAAgC,UAACC,KAAD;AAAA,mBAAWP,SAASQ,OAAT,CAAiB,MAAjB,EAAyBD,KAAzB,CAAX;AAAA,SAAhC;AACAR,eAAOO,gBAAP,CAAwB,OAAxB,EAAiC,UAACC,KAAD;AAAA,mBAAWP,SAASQ,OAAT,CAAiB,OAAjB,EAA0BD,KAA1B,CAAX;AAAA,SAAjC;AACAR,eAAOO,gBAAP,CAAwB,OAAxB,EAAiC,UAACC,KAAD;AAAA,mBAAWP,SAASQ,OAAT,CAAiB,OAAjB,EAA0BD,KAA1B,CAAX;AAAA,SAAjC;AACAR,eAAOO,gBAAP,CAAwB,SAAxB,EAAmC,gBAAc;AAAA,gBAAXG,IAAW,QAAXA,IAAW;;AAC7C,gBAAIC,SAASC,KAAKC,KAAL,CAAWH,IAAX,CAAb;AACAT,qBAASQ,OAAT,CAAiB,SAAjB,EAA4BE,MAA5B;;AAEA,gBAAIA,WAAW,IAAX,IAAmBA,OAAOG,IAAP,KAAgBC,SAAnC,IAAgDJ,OAAOD,IAAP,KAAgBK,SAApE,EACId,SAASQ,OAAT,cAA4BE,OAAOG,IAAnC,EAA2CH,OAAOD,IAAlD;AACP,SAND;AAOA;AACAV,eAAOO,gBAAP,CAAwB,OAAxB,EAAiCJ,QAAjC;AACH,KAda,EAcX,KAdW,CAAd;;AAgBA,aAASa,EAAT,CAAaC,IAAb,EAAmBC,EAAnB,EAAuB;AACnBC,gBAAQC,GAAR,CAAY,IAAZ;AACAnB,iBAASe,EAAT,CAAYC,IAAZ,EAAkB,UAACI,CAAD;AAAA,8CAAOC,IAAP;AAAOA,oBAAP;AAAA;;AAAA,mBAAgBJ,oBAAMI,IAAN,CAAhB;AAAA,SAAlB;AACH;;sBAEc;AAEXC,eAFW,mBAEFL,EAFE,EAEE;AACTF,eAAG,SAAH,EAAcE,EAAd;AACA,mBAAO,IAAP;AACH,SALU;AAOXM,iBAPW,qBAOAV,IAPA,EAOMI,EAPN,EAOU;AACjBF,4BAAcF,IAAd,EAAsBI,EAAtB;AACA,mBAAO,IAAP;AACH,SAVU;AAYXO,YAZW,gBAYLP,EAZK,EAYD;AACNF,eAAG,MAAH,EAAWE,EAAX;AACA,mBAAO,IAAP;AACH,SAfU;AAiBXQ,aAjBW,iBAiBJR,EAjBI,EAiBA;AACPF,eAAG,OAAH,EAAYE,EAAZ;AACA,mBAAO,IAAP;AACH,SApBU;AAsBXS,aAtBW,iBAsBJT,EAtBI,EAsBA;AACPF,eAAG,OAAH,EAAYE,EAAZ;AACA,mBAAO,IAAP;AACH,SAzBU;AA2BXU,YA3BW,gBA2BLlB,IA3BK,EA2BC;AACRV,mBAAO4B,IAAP,CAAYhB,KAAKiB,SAAL,CAAenB,IAAf,CAAZ;AACH,SA7BU;AA+BXP,eA/BW,qBA+BA;AACPA;AACH;AAjCU,MAmCbuB,KAnCa,CAmCP;AAAA,2CAAIJ,IAAJ;AAAIA,gBAAJ;AAAA;;AAAA,eAAaH,QAAQC,GAAR,CAAYE,IAAZ,CAAb;AAAA,KAnCO,EAmCyBK,KAnCzB,CAmC+B;AAAA,2CAAIL,IAAJ;AAAIA,gBAAJ;AAAA;;AAAA,eAAaH,QAAQC,GAAR,CAAYE,IAAZ,CAAb;AAAA,KAnC/B,EAmC+DG,IAnC/D,CAmCoE;AAAA,2CAAIH,IAAJ;AAAIA,gBAAJ;AAAA;;AAAA,eAAaH,QAAQC,GAAR,CAAYE,IAAZ,CAAb;AAAA,KAnCpE,C","file":"../../util/websocket.js","sourcesContent":["import websocketPath from 'ws-config'\nimport { throttle } from 'util/common'\nimport 'jquery'\n\nlet socket\nconst eventBus = $({})\n\nlet connect = throttle(function () {\n    socket = new WebSocket(`ws://${location.host}${websocketPath}`)\n    socket.addEventListener('open', (event) => eventBus.trigger('open', event))\n    socket.addEventListener('close', (event) => eventBus.trigger('close', event))\n    socket.addEventListener('error', (event) => eventBus.trigger('error', event))\n    socket.addEventListener('message', ({ data }) => {\n        let object = JSON.parse(data)\n        eventBus.trigger('message', object)\n\n        if (object !== null && object.type !== undefined && object.data !== undefined)\n            eventBus.trigger(`message-${object.type}`, object.data)\n    })\n    // Reconnect\n    socket.addEventListener('close', connect)\n}, 10000)\n\nfunction on (name, cb) {\n    console.log('hi')\n    eventBus.on(name, (e, ...rest) => cb(...rest))\n}\n\nexport default {\n\n    message (cb) {\n        on('message', cb)\n        return this\n    },\n\n    subscribe (type, cb) {\n        on(`message-${type}`, cb)\n        return this\n    },\n\n    open (cb) {\n        on('open', cb)\n        return this\n    },\n\n    close (cb) {\n        on('close', cb)\n        return this\n    },\n\n    error (cb) {\n        on('error', cb)\n        return this\n    },\n\n    send (data) {\n        socket.send(JSON.stringify(data))\n    },\n\n    connect () {\n        connect()\n    }\n\n}.close((...rest) => console.log(rest)).error((...rest) => console.log(rest)).open((...rest) => console.log(rest))\n"]}