{"version":3,"sources":["index.js"],"names":["oldTitle","document","title","counts","notices","chat","setCount","type","value","$","toggle","both","chatUtil","getLastTime","window","localStorage","getItem","Date","toISOString","lastCreated","connect","param","get","ok","count","subscribe","created","setInterval"],"mappings":";;;;;;;;;;;;;AAIA,QAAIA,WAAWC,SAASC,KAAxB;;AAEA,QAAIC,SAAS;AACTC,iBAAS,CADA;AAETC,cAAM;AAFG,KAAb;;AAKA,aAASC,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AAC3BL,eAAOI,IAAP,IAAeC,KAAf;AACAC,UAAE,WAAF,EAAeC,MAAf,CAAsB,CAAC,CAACP,OAAOE,IAA/B;AACAI,UAAE,cAAF,EAAkBC,MAAlB,CAAyB,CAAC,CAACP,OAAOC,OAAlC;AACA,YAAIO,OAAO,CAAC,CAACR,OAAOE,IAAT,IAAiB,CAAC,CAACF,OAAOC,OAArC;AACAK,UAAE,WAAF,EAAeC,MAAf,CAAsBC,IAAtB;AACAV,iBAASC,KAAT,GAAiB,CAACS,OAAO,QAAP,GAAkB,EAAnB,IAAyBX,QAA1C;AACH;;AAED,QAAMY,WAAW;AAEbC,mBAFa,yBAEE;AACX,mBAAOC,OAAOC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,KAA4C,IAAIC,IAAJ,GAAWC,WAAX,EAAnD;AACH;AAJY,KAAjB;;AAOA,QAAIC,oBAAJ;;AAEAV,MAAE,YAAM;AACJ,4BAAOW,OAAP;AACA,2BAAQ,6BAAR,EAAuCC,KAAvC,CAA6C,OAA7C,EAAsDT,SAASC,WAAT,EAAtD,EAA8ES,GAA9E,GACKC,EADL,CACQ,gBAAa;AAAA,gBAAXC,KAAW,QAAXA,KAAW;;AACblB,qBAAS,MAAT,EAAiBkB,KAAjB;AACH,SAHL;AAIH,KAND;;AAQA,wBAAOC,SAAP,CAAiB,SAAjB,EAA4B,iBAAS;AACjCnB,iBAAS,SAAT,EAAoBkB,KAApB;AACH,KAFD;;AAIA,wBAAOC,SAAP,CAAiB,MAAjB,EAAyB,iBAAe;AAAA,YAAbC,OAAa,SAAbA,OAAa;;AACpCP,sBAAcO,OAAd;AACApB,iBAAS,MAAT,EAAiBH,OAAOE,IAAP,GAAY,CAA7B;AACH,KAHD;;AAKAsB,gBAAY,YAAM;AACd,YAAIR,eAAe,IAAIF,IAAJ,CAASE,WAAT,KAAyB,IAAIF,IAAJ,CAASL,SAASC,WAAT,EAAT,CAA5C,EACIP,SAAS,MAAT,EAAiB,CAAjB;AACP,KAHD,EAGG,IAHH","file":"../../notices/index.js","sourcesContent":["import socket from 'util/websocket'\nimport 'jquery'\nimport API from 'util/rest'\n\nlet oldTitle = document.title\n\nlet counts = {\n    notices: 0,\n    chat: 0\n}\n\nfunction setCount(type, value) {\n    counts[type] = value\n    $('.dot.chat').toggle(!!counts.chat)\n    $('.dot.notices').toggle(!!counts.notices)\n    let both = !!counts.chat || !!counts.notices\n    $('.dot.both').toggle(both)\n    document.title = (both ? '（新消息） ' : '') + oldTitle\n}\n\nconst chatUtil = {\n\n    getLastTime () {\n        return window.localStorage.getItem('last-time') || new Date().toISOString()\n    }\n}\n\nlet lastCreated\n\n$(() => {\n    socket.connect()\n    new API('/api/messages/unread/count/').param('after', chatUtil.getLastTime()).get()\n        .ok(({count}) => {\n            setCount('chat', count)\n        })\n})\n\nsocket.subscribe('notices', count => {\n    setCount('notices', count)\n})\n\nsocket.subscribe('chat', ({created}) => {\n    lastCreated = created\n    setCount('chat', counts.chat+1)\n})\n\nsetInterval(() => {\n    if (lastCreated && new Date(lastCreated) <= new Date(chatUtil.getLastTime()))\n        setCount('chat', 0)\n}, 1000)\n"]}