{"version":3,"sources":["index.js"],"names":["tmpl","verbatim","$sidebar","$","$chatview","$textarea","$title","$cover","$submitButton","$loadHistoryButton","$messagePane","$chatList","$searchInput","$searchPane","on","prop","val","show","reg","RegExp","find","each","$this","pinyin","data","toggle","test","click","target","is","closest","length","hide","clearInput","change","$form","remove","form","payload","uid","$controlButton","uploader","$button","$progress","icons","fadeOut","manager","submit","abortAll","type","$i","iconBaseName","toggleClass","toggleView","USER_SESSION","GROUP_SESSION","Session","object","session_name","_type","_object","_entries","_messages","_historyAPI","param","_unreadCount","prototype","_decorateMessage","message","sender","_users","filter","u","id","is_me","userId","direction","digest","nickname","content","console","log","_earliestTime","getLastTime","created","loadHistory","get","ok","results","forEach","unshift","isActive","renderHistory","messages","oldHeight","$messageBox","height","messageRenderer","renderMessages","reverse","BEFORE","scrollTop","addEntry","$el","push","activate","extraFields","result","receiver","receivedMessage","renderMessage","AFTER","item","chatList","getItem","_incUnread","setUnread","unreadManager","inc","_clearUnread","dec","currentSession","html","title","clear","ChatListItem","session","_session","_init","_createElement","_$el","renderBefore","topElement","detach","prependTo","top","value","_chatItems","_names","undefined","_storeNames","name","window","localStorage","setObj","recover","getObj","slice","_sessions","renderEachSwitch","makeUserSessionName","ids","sort","join","makeGroupSessionName","g","_groups","_usersLoaded","_groupsLoaded","init","_loadUsers","_loadGroups","then","connect","_bindEventListeners","_bindSocketListeners","_loadUnreadMessages","receivedMessages","loading","start","removeClass","addClass","stop","bind","subscribe","submitted","open","_updateLastTime","time","setItem","Date","toISOString","getPayload","send","_loadContact","api","sessionName","store","$list","pipe","x","entries","getFullChars","toLowerCase","_createSession","entry","render","searchEntry","clone","appendTo","add","y","pyx","pyy","renderInto","_count","number","_syncState"],"mappings":"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","file":"../../chat/index.js","sourcesContent":["import 'bootstrap'\nimport 'jquery'\nimport API from 'util/rest'\nimport pinyin from 'util/pinyin'\nimport user from 'user-info'\nimport * as tmpl from 'util/tmpl'\nimport socket from 'util/websocket'\nimport Form from 'util/form'\nimport { Upload } from 'util/attachments'\n\nimport { throttle, randomString, wait } from 'util/common'\n\ntmpl.verbatim()\n\n// Global variables\n\nconst $sidebar = $('#sidebar'), $chatview = $('#chat-view')\nconst $textarea = $('#input-bar textarea')\nconst $title = $('div.top-bar .title')\nconst $cover = $('#chat-view div.cover')\nconst $submitButton = $('#input-bar button[type=submit]')\nconst $loadHistoryButton = $('#load-history')\nconst $messagePane = $('#message-pane')\nconst $chatList = $('#chat-pane ul')\nconst $searchInput = $('#search-box')\nconst $searchPane = $('#search-pane')\n\n// Submit Button State\n\n$textarea.on('input change', () => $submitButton.prop('disabled', !$textarea.val()))\n\n// Search\n\n$searchInput.on('focus', () => {\n    $searchPane.show()\n}).on('input', () => {\n    let reg = new RegExp($searchInput.val())\n\n    $searchPane.find('li').each(function () {\n        let $this = $(this), pinyin = $this.data('py')\n\n        $this.toggle(reg.test(pinyin))\n    })\n})\n\n$('html').click(({ target }) => {\n    if ($searchPane.is(':visible') && !$(target).closest('#searchPane, #search-box').length) $searchPane.hide()\n})\n\n// Util Functions\n\n\n// Util for Input Bar\n\nfunction clearInput () {\n    $textarea.val('').change()\n    $form.find('input[name=\"attachments[]\"]').remove()\n}\n\n// Input Form\n\nconst $form = $('#input-bar form')\n\nconst form = new Form($form, null, null).payload(data => data.uid = randomString())\n\n// Upload Attachments\n\nconst $controlButton = $('#upload-file-button .control-button')\n\nconst uploader = new Upload({\n    $button: '#upload-file-button',\n    $form,\n    $progress: '#input-bar .progress .progress-bar'\n}).on('start', () => {\n    $controlButton.show().find('i').icons('times')\n}).on('always', () => $controlButton.fadeOut())\n.on('uploaded', () => manager.submit())\n\n$controlButton.click(() => uploader.abortAll())\n\n// Top nav icons\n\n$('#sidebar ul.top-nav li a')\n    .on('shown.bs.tab hidden.bs.tab', function ({ type }) {\n        let $i = $(this).find('i'), iconBaseName = `fa-${$i.data('icon')}`\n        $i\n            .toggleClass(iconBaseName, type === 'shown')\n            .toggleClass(`${iconBaseName}-o`, type === 'hidden')\n    })\n\n// sidebar & chat-view toggler\n\nfunction toggleView () {\n    $sidebar.toggleClass('hidden-sm-down')\n    $chatview.toggleClass('hidden-sm-down')\n}\n\n$('body').on('click', '.toggle-view', toggleView)\n\n// Session Class Definition\n\nconst USER_SESSION = 'user', GROUP_SESSION = 'group'\n\nfunction Session (type, object) {\n    this.session_name = object.session_name\n    this._type = type\n    this._object = object\n    this._entries = []\n    this._messages = []\n    this._historyAPI = new API('/api/messages/history/').param('session_name', object.session_name)\n    this._unreadCount = 0\n}\n\nSession.prototype = {\n\n    _decorateMessage (message) {\n        message.sender = manager._users.filter(u => u.id === message.sender)[0]\n        message.is_me = message.sender.id === user.userId\n        message.direction = message.is_me ? 'right' : 'left'\n        message.digest = (message.is_me ? '' : `${message.sender.nickname}: `) + message.content\n\n        console.log(message.sender)\n    },\n\n    _earliestTime () {\n        if (!this._messages.length) return manager.getLastTime()\n        return this._messages[0].created\n    },\n\n    loadHistory () {\n        this._historyAPI.param('before', this._earliestTime()).get()\n            .ok(({ results }) => {\n                results.forEach(message => {\n                    this._decorateMessage(message)\n                    this._messages.unshift(message)\n                })\n\n                if (this.isActive()) this.renderHistory(results)\n            })\n    },\n\n    renderHistory (messages) {\n        let oldHeight = $messageBox.height()\n        messageRenderer.renderMessages(messages.reverse(), tmpl.BEFORE)\n        $messagePane.scrollTop($messageBox.height() - oldHeight)\n    },\n\n    addEntry ($el) {\n        this._entries.push($el)\n\n        $el.click(() => manager.activate(this))\n    },\n\n    extraFields () {\n        let result = { session_name: this._object.session_name }\n\n        if (this._type === USER_SESSION) result.receiver = this._object.id\n\n        return result\n    },\n\n    receivedMessage (message) {\n        this._decorateMessage(message)\n        this._messages.push(message)\n        if (this.isActive()) messageRenderer.renderMessage(message, tmpl.AFTER)\n        let item = chatList.getItem(this)\n        item.receivedMessage(message)\n        if (!this.isActive()) {\n            this._incUnread()\n            item.setUnread(true)\n        }\n    },\n\n    _incUnread () {\n        this._unreadCount++\n        unreadManager.inc(1)\n    },\n\n    _clearUnread () {\n        unreadManager.dec(this._unreadCount)\n        this._unreadCount = 0\n    },\n\n    isActive () {\n        return this === manager.currentSession\n    },\n\n    activate () {\n        $title.html(this._object.title)\n        messageRenderer.clear()\n        messageRenderer.renderMessages(this._messages, tmpl.AFTER)\n        $messagePane.scrollTop($messageBox.height())\n        let item = chatList.getItem(this)\n        this._clearUnread()\n        item.setUnread(false)\n    }\n}\n\n// ChatListItem Class Definition\n\nfunction ChatListItem (session) {\n    this._session = session\n    this._init()\n}\n\nChatListItem.prototype = {\n\n    _init () {\n        this._createElement()\n    },\n\n    _createElement () {\n        this._$el = tmpl.renderBefore($chatList, 'chat', this._session._object)\n        this._session.addEntry(this._$el)\n    },\n\n    topElement () {\n        this._$el.detach().prependTo($chatList)\n    },\n\n    receivedMessage (message) {\n        chatList.top(this._session)\n        this._$el.find('.message-digest').html(message.digest)\n    },\n\n    setUnread (value) {\n        console.log(this._$el)\n        this._$el.find('.dot').toggle(value)\n    }\n}\n\n// chatList Object Definition\n\nconst chatList = {\n\n    _chatItems: {},\n    _names: [],\n\n    getItem (session) {\n        let item = this._chatItems[session.session_name]\n\n        if (item !== undefined) return item\n        item = this._chatItems[session.session_name] = new ChatListItem(session)\n        this._names.unshift(session.session_name)\n        this._storeNames()\n        return item\n    },\n\n    top (session) {\n        let item = this.getItem(session), name = session.session_name\n\n        item.topElement()\n        this._names.remove(name).unshift(name)\n        this._storeNames()\n    },\n\n    _storeNames () {\n        window.localStorage.setObj('chat-items', this._names)\n    },\n\n    recover () {\n        this._names = window.localStorage.getObj('chat-items') || []\n\n        this._names.slice().reverse().forEach(session_name => {\n            console.log(session_name)\n            this.getItem(manager._sessions[session_name])\n        })\n    }\n}\n\n\n// messageRenderer Object Definition\n\nconst $messageBox = $('#message-box')\n\nconst messageRenderer = {\n\n    clear () {\n        $messageBox.html('')\n    },\n\n    renderMessages (messages, direction) {\n        tmpl.renderEachSwitch(direction, $messageBox, 'message', messages)\n    },\n\n    renderMessage (message, direction) {\n        this.renderMessages([message], direction)\n    }\n}\n\n// manager Object Definition\n\nconst makeUserSessionName = u => {\n    let ids = [user.userId, u.id]\n    ids.sort()\n    return `user_${ids.join('_')}`\n}\nconst makeGroupSessionName = g => `discussion_${g.id}`\n\nconst manager = {\n\n    _users: [],\n    _groups: [],\n    _sessions: {},\n\n    _usersLoaded: false,\n    _groupsLoaded: false,\n\n    currentSession: null,\n\n    init () {\n        this._loadUsers()\n        this._loadGroups()\n\n        wait(() => this._groupsLoaded && this._usersLoaded).then(() => {\n            chatList.recover()\n            socket.connect()\n        })\n\n        this._bindEventListeners()\n        this._bindSocketListeners()\n    },\n\n    _loadUnreadMessages () {\n        new API('/api/messages/unread/').param('after', this.getLastTime()).get()\n            .ok(results => this.receivedMessages(results))\n    },\n\n    _bindEventListeners () {\n        $submitButton\n            .loading({\n                start: function () { this.find('i').removeClass('fa-send-o').addClass('fa-spin fa-circle-o-notch') },\n                stop: function () { this.find('i').removeClass('fa-spin fa-circle-o-notch').addClass('fa-send-o') }\n            })\n            .click(this.submit.bind(this))\n\n        $loadHistoryButton\n            .click(() => this.currentSession.loadHistory())\n    },\n\n    _bindSocketListeners () {\n        socket.subscribe('chat', message => {\n            if (message.uid === $submitButton.data('waiting-uid')) this.submitted()\n            this.receivedMessages([message])\n        }).open(() => this._loadUnreadMessages())\n    },\n\n    receivedMessages (messages) {\n        messages.forEach(this.receivedMessage.bind(this))\n    },\n\n    receivedMessage (message) {\n        this._updateLastTime(message.created)\n        this._sessions[message.session_name].receivedMessage(message)\n    },\n\n    _updateLastTime (time) {\n        window.localStorage.setItem('last-time', time)\n    },\n\n    getLastTime () {\n        return window.localStorage.getItem('last-time') || new Date().toISOString()\n    },\n\n    submitted () {\n        $submitButton.loading('stop')\n        clearInput()\n    },\n\n    submit () {\n        let payload = form.getPayload()\n        $submitButton.loading('start').data('waiting-uid', payload.uid)\n        socket.send(payload)\n    },\n\n    _loadUsers () {\n        return this._loadContact({\n            api: '/api/users/',\n            sessionName: makeUserSessionName,\n            title: 'nickname',\n            store: '_users',\n            $list: '#user-contacts-pane ul',\n            type: USER_SESSION\n        }).ok(() => this._usersLoaded = true)\n    },\n\n    _loadContact ({ api, pipe = x => x, store, $list, type, title, sessionName }) {\n        return new API(api).get()\n            .ok(results => {\n                let entries = $()\n                this[store] = results\n\n                results.forEach(object => {\n                    pipe(object)\n                    object.title = object[title]\n                    object.pinyin = pinyin.getFullChars(object.title).toLowerCase()\n                    object.session_name = sessionName(object)\n\n                    let session = this._createSession(object, type)\n                    let entry = $(tmpl.render('contact', object))\n                    let searchEntry = entry.clone().appendTo($searchPane.find('ul'))\n\n                    session.addEntry(searchEntry)\n                    session.addEntry(entry)\n                    entries = entries.add(entry)\n                })\n\n                entries.sort((x, y) => {\n                    let pyx = '' + $(x).data('py'), pyy = '' + $(y).data('py')\n\n                    return pyx > pyy ? 1 : pyx === pyy ? 0 : -1\n                }).appendTo($list)\n            })\n    },\n\n    _createSession (object, type) {\n        let session = this._sessions[object.session_name]\n\n        if (session === undefined) {\n            session = this._sessions[object.session_name] = new Session(type, object)\n        }\n\n        return session\n    },\n\n    _loadGroups () {\n        return this._loadContact({\n            api: '/api/discussions/',\n            sessionName: makeGroupSessionName,\n            title: 'name',\n            store: '_groups',\n            $list: '#group-contacts-pane ul',\n            type: GROUP_SESSION\n        }).ok(() => this._groupsLoaded = true)\n    },\n\n    activate (session) {\n        $cover.toggle(session === null)\n        this.currentSession = session\n        if (this.currentSession === null) return\n\n        clearInput()\n        tmpl.renderInto('#input-bar div.extra-fields', 'extra-fields', session.extraFields())\n        session.activate()\n        toggleView()\n    }\n}\n\nmanager.init()\n\n// unreadManager Definition\n\nconst unreadManager = {\n\n    _count: 0,\n\n    inc (number) {\n        this._count += number\n        this._syncState()\n    },\n\n    dec (number) {\n        this._count -= number\n        this._syncState()\n    },\n\n    _syncState () {\n        if (this._count < 0) this._count = 0\n\n        $('.global.dot').toggle(this._count !== 0)\n    }\n}\n"]}