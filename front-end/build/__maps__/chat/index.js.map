{"version":3,"sources":["index.js"],"names":["tmpl","verbatim","$sidebar","$","$chatview","$textarea","$title","$cover","$submitButton","$loadHistoryButton","$messagePane","$chatList","$searchInput","$searchPane","$messageNotifier","on","prop","val","show","reg","RegExp","find","each","$this","pinyin","data","toggle","test","click","target","is","closest","length","hide","scrollToBottom","scrollTop","scrollHeight","isBottomed","height","$messageBox","outerHeight","scroll","trigger","showNotifier","message","is_me","session_name","manager","currentSession","html","digest","hideNotifier","activate","_sessions","clearInput","change","$form","remove","form","payload","uid","$controlButton","uploader","$button","$progress","icons","fadeOut","submit","abortAll","type","$i","iconBaseName","toggleClass","toggleView","showView","argSide","undefined","argChat","USER_SESSION","GROUP_SESSION","Session","object","_type","_object","_entries","_messages","_historyAPI","param","_earliestTime","_unreadCount","prototype","_decorateMessage","sender","_users","filter","u","id","userId","direction","nickname","content","slice","replace","getLastTime","created","loadHistory","get","ok","results","next","forEach","unshift","isActive","renderHistory","messages","oldHeight","messageRenderer","renderMessages","reverse","BEFORE","addEntry","$el","push","extraFields","result","receiver","receivedMessage","renderMessage","AFTER","item","chatList","getItem","_incUnread","setUnread","unreadManager","inc","_clearUnread","dec","title","clear","ChatListItem","session","_session","_init","_createElement","_$el","renderBefore","topElement","detach","prependTo","top","value","_chatItems","_names","_storeNames","name","window","localStorage","setObj","recover","getObj","renderEachSwitch","makeUserSessionName","ids","sort","join","makeGroupSessionName","g","_groups","_usersLoaded","_groupsLoaded","init","_loadUsers","_loadGroups","then","connect","_bindEventListeners","_bindSocketListeners","_loadUnreadMessages","receivedMessages","loading","start","removeClass","addClass","stop","bind","subscribe","submitted","open","_updateLastTime","time","setItem","Date","toISOString","setTimeout","getPayload","send","_loadContact","api","sessionName","store","$list","pipe","x","entries","getFullChars","toLowerCase","_createSession","entry","render","searchEntry","clone","appendTo","add","y","pyx","pyy","renderInto","_count","number","_syncState"],"mappings":"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","file":"../../chat/index.js","sourcesContent":["import 'bootstrap'\nimport 'jquery'\nimport API from 'util/rest'\nimport pinyin from 'util/pinyin'\nimport user from 'user-info'\nimport * as tmpl from 'util/tmpl'\nimport socket from 'util/websocket'\nimport Form from 'util/form'\nimport { Upload } from 'util/attachments'\n\nimport { throttle, randomString, wait } from 'util/common'\n\ntmpl.verbatim()\n\n// Global variables\n\nconst $sidebar = $('#sidebar'), $chatview = $('#chat-view')\nconst $textarea = $('#input-bar textarea')\nconst $title = $('div.top-bar .title')\nconst $cover = $('#chat-view div.cover')\nconst $submitButton = $('#input-bar button[type=submit]')\nconst $loadHistoryButton = $('#load-history')\nconst $messagePane = $('#message-pane')\nconst $chatList = $('#chat-pane ul')\nconst $searchInput = $('#search-box')\nconst $searchPane = $('#search-pane')\nconst $messageNotifier = $('#message-notifier')\n\n// Submit Button State\n\n$textarea.on('input change', () => $submitButton.prop('disabled', !$textarea.val()))\n\n// Search\n\n$searchInput.on('focus', () => {\n    $searchPane.show()\n}).on('input', () => {\n    let reg = new RegExp($searchInput.val())\n\n    $searchPane.find('li').each(function () {\n        let $this = $(this), pinyin = $this.data('py')\n\n        $this.toggle(reg.test(pinyin))\n    })\n})\n\n$('html').click(({ target }) => {\n    if ($searchPane.is(':visible') && !$(target).closest('#searchPane, #search-box').length) $searchPane.hide()\n})\n\n// Scroll Utils\n\nfunction scrollToBottom () {\n    $messagePane.scrollTop($messagePane[0].scrollHeight)\n}\n\nfunction isBottomed () {\n    return $messagePane.scrollTop() + $messagePane.height() > $loadHistoryButton.height() + 10 + $messageBox.outerHeight()\n}\n\n$messagePane.scroll(throttle(() => {\n    if (isBottomed())\n        $messagePane.trigger('bottomed')\n}, 100))\n\n// Notifier Utils\n\nfunction showNotifier (message) {\n    if (!message.is_me && (!isBottomed() || message.session_name !== manager.currentSession.session_name))\n        $messageNotifier.html(message.digest).data('session_name', message.session_name).show()\n}\n\nfunction hideNotifier (message) {\n    $messageNotifier.hide()\n}\n\n$messagePane.on('bottomed', () => {\n    if (manager.currentSession.session_name === $messageNotifier.data('session_name'))\n        $messageNotifier.hide()\n})\n\n$messageNotifier.click(() => {\n    manager.activate(manager._sessions[$messageNotifier.data('session_name')])\n    scrollToBottom()\n    hideNotifier()\n})\n\n// Util for Input Bar\n\nfunction clearInput () {\n    $textarea.val('').change()\n    $form.find('input[name=\"attachments[]\"]').remove()\n}\n\n// Input Form\n\nconst $form = $('#input-bar form')\n\nconst form = new Form($form, null, null).payload(data => data.uid = randomString())\n\n// Upload Attachments\n\nconst $controlButton = $('#upload-file-button .control-button')\n\nconst uploader = new Upload({\n    $button: '#upload-file-button',\n    $form,\n    $progress: '#input-bar .progress .progress-bar'\n}).on('start', () => {\n    $controlButton.show().find('i').icons('times')\n}).on('always', () => $controlButton.fadeOut())\n.on('uploaded', () => manager.submit())\n\n$controlButton.click(() => uploader.abortAll())\n\n// Top nav icons\n\n$('#sidebar ul.top-nav li a')\n    .on('shown.bs.tab hidden.bs.tab', function ({ type }) {\n        let $i = $(this).find('i'), iconBaseName = `fa-${$i.data('icon')}`\n        $i\n            .toggleClass(iconBaseName, type === 'shown')\n            .toggleClass(`${iconBaseName}-o`, type === 'hidden')\n    })\n\n// sidebar & chat-view toggler\n\nfunction toggleView (showView) {\n    let argSide = showView === undefined ? undefined : showView, argChat = showView === undefined ? undefined : !showView\n    $sidebar.toggleClass('hidden-sm-down', argSide)\n    $chatview.toggleClass('hidden-sm-down', argChat)\n}\n\n$('body').on('click', '.toggle-view', toggleView)\n\n// Session Class Definition\n\nconst USER_SESSION = 'user', GROUP_SESSION = 'group'\n\nfunction Session (type, object) {\n    this.session_name = object.session_name\n    this._type = type\n    this._object = object\n    this._entries = []\n    this._messages = []\n    this._historyAPI = new API('/api/messages/history/')\n        .param('session_name', object.session_name)\n        .param('before', this._earliestTime())\n    this._unreadCount = 0\n}\n\nSession.prototype = {\n\n    _decorateMessage (message) {\n        message.sender = manager._users.filter(u => u.id === message.sender)[0]\n        message.is_me = message.sender.id === user.userId\n        message.direction = message.is_me ? 'right' : 'left'\n        message.digest = (message.is_me ? '' : `${message.sender.nickname}: `) + message.content.slice(0, 20).replace(/\\s/g, '')\n    },\n\n    _earliestTime () {\n        if (!this._messages.length) return manager.getLastTime()\n        return this._messages[0].created\n    },\n\n    loadHistory () {\n        if (!this._historyAPI) return\n        new API(this._historyAPI).get()\n            .ok(({ results, next }) => {\n                results.forEach(message => {\n                    this._decorateMessage(message)\n                    this._messages.unshift(message)\n                })\n\n                if (this.isActive()) this.renderHistory(results)\n\n                this._historyAPI = next\n                if (!next) $loadHistoryButton.hide()\n            })\n    },\n\n    renderHistory (messages) {\n        let oldHeight = $messageBox.height()\n        messageRenderer.renderMessages(messages.reverse(), tmpl.BEFORE)\n        $messagePane.scrollTop($messageBox.height() - oldHeight)\n    },\n\n    addEntry ($el) {\n        this._entries.push($el)\n\n        $el.click(() => manager.activate(this))\n    },\n\n    extraFields () {\n        let result = { session_name: this._object.session_name }\n\n        if (this._type === USER_SESSION) result.receiver = this._object.id\n\n        return result\n    },\n\n    receivedMessage (message) {\n        this._decorateMessage(message)\n        this._messages.push(message)\n        if (this.isActive()) messageRenderer.renderMessage(message, tmpl.AFTER)\n        let item = chatList.getItem(this)\n        item.receivedMessage(message)\n        if (!this.isActive()) {\n            this._incUnread()\n            item.setUnread(true)\n        }\n        showNotifier(message)\n    },\n\n    _incUnread () {\n        this._unreadCount++\n        unreadManager.inc(1)\n    },\n\n    _clearUnread () {\n        unreadManager.dec(this._unreadCount)\n        this._unreadCount = 0\n    },\n\n    isActive () {\n        return this === manager.currentSession\n    },\n\n    activate () {\n        $title.html(this._object.title)\n        messageRenderer.clear()\n        messageRenderer.renderMessages(this._messages, tmpl.AFTER)\n        $messagePane.scrollTop($messageBox.height())\n        let item = chatList.getItem(this)\n        if (this._historyAPI) $loadHistoryButton.show()\n        this._clearUnread()\n        item.setUnread(false)\n    }\n}\n\n// ChatListItem Class Definition\n\nfunction ChatListItem (session) {\n    this._session = session\n    this._init()\n}\n\nChatListItem.prototype = {\n\n    _init () {\n        this._createElement()\n    },\n\n    _createElement () {\n        this._$el = tmpl.renderBefore($chatList, 'chat', this._session._object)\n        this._session.addEntry(this._$el)\n    },\n\n    topElement () {\n        this._$el.detach().prependTo($chatList)\n    },\n\n    receivedMessage (message) {\n        chatList.top(this._session)\n        this._$el.find('.message-digest').html(message.digest)\n    },\n\n    setUnread (value) {\n        this._$el.find('.dot').toggle(value)\n    }\n}\n\n// chatList Object Definition\n\nconst chatList = {\n\n    _chatItems: {},\n    _names: [],\n\n    getItem (session) {\n        let item = this._chatItems[session.session_name]\n\n        if (item !== undefined) return item\n        item = this._chatItems[session.session_name] = new ChatListItem(session)\n        this._names.unshift(session.session_name)\n        this._storeNames()\n        return item\n    },\n\n    top (session) {\n        let item = this.getItem(session), name = session.session_name\n\n        item.topElement()\n        this._names.remove(name).unshift(name)\n        this._storeNames()\n    },\n\n    _storeNames () {\n        window.localStorage.setObj('chat-items', this._names)\n    },\n\n    recover () {\n        this._names = window.localStorage.getObj('chat-items') || []\n\n        this._names.slice().reverse().forEach(session_name => {\n            this.getItem(manager._sessions[session_name])\n        })\n    }\n}\n\n\n// messageRenderer Object Definition\n\nconst $messageBox = $('#message-box')\n\nconst messageRenderer = {\n\n    clear () {\n        $messageBox.html('')\n    },\n\n    renderMessages (messages, direction) {\n        tmpl.renderEachSwitch(direction, $messageBox, 'message', messages)\n    },\n\n    renderMessage (message, direction) {\n        this.renderMessages([message], direction)\n    }\n}\n\n// manager Object Definition\n\nconst makeUserSessionName = u => {\n    let ids = [user.userId, u.id]\n    ids.sort()\n    return `user_${ids.join('_')}`\n}\nconst makeGroupSessionName = g => `discussion_${g.id}`\n\nconst manager = {\n\n    _users: [],\n    _groups: [],\n    _sessions: {},\n\n    _usersLoaded: false,\n    _groupsLoaded: false,\n\n    currentSession: null,\n\n    init () {\n        this._loadUsers()\n        this._loadGroups()\n\n        wait(() => this._groupsLoaded && this._usersLoaded).then(() => {\n            chatList.recover()\n            socket.connect()\n        })\n\n        this._bindEventListeners()\n        this._bindSocketListeners()\n    },\n\n    _loadUnreadMessages () {\n        new API('/api/messages/unread/').param('after', this.getLastTime()).get()\n            .ok(results => this.receivedMessages(results))\n    },\n\n    _bindEventListeners () {\n        $submitButton\n            .loading({\n                start: function () { this.find('i').removeClass('fa-send-o').addClass('fa-spin fa-circle-o-notch') },\n                stop: function () { this.find('i').removeClass('fa-spin fa-circle-o-notch').addClass('fa-send-o') }\n            })\n            .click(this.submit.bind(this))\n\n        $loadHistoryButton\n            .click(() => this.currentSession.loadHistory())\n    },\n\n    _bindSocketListeners () {\n        socket.subscribe('chat', message => {\n            if (message.uid === $submitButton.data('waiting-uid')) this.submitted()\n            this.receivedMessages([message])\n        }).open(() => this._loadUnreadMessages())\n    },\n\n    receivedMessages (messages) {\n        messages.forEach(this.receivedMessage.bind(this))\n    },\n\n    receivedMessage (message) {\n        this._updateLastTime(message.created)\n        this._sessions[message.session_name].receivedMessage(message)\n    },\n\n    _updateLastTime (time) {\n        window.localStorage.setItem('last-time', time)\n    },\n\n    getLastTime () {\n        return window.localStorage.getItem('last-time') || new Date().toISOString()\n    },\n\n    submitted () {\n        $submitButton.loading('stop')\n        clearInput()\n        setTimeout(() => scrollToBottom(), 150)\n    },\n\n    submit () {\n        let payload = form.getPayload()\n        $submitButton.loading('start').data('waiting-uid', payload.uid)\n        socket.send(payload)\n    },\n\n    _loadUsers () {\n        return this._loadContact({\n            api: '/api/users/',\n            sessionName: makeUserSessionName,\n            title: 'nickname',\n            store: '_users',\n            $list: '#user-contacts-pane ul',\n            type: USER_SESSION\n        }).ok(() => this._usersLoaded = true)\n    },\n\n    _loadContact ({ api, pipe = x => x, store, $list, type, title, sessionName }) {\n        return new API(api).get()\n            .ok(results => {\n                let entries = $()\n                this[store] = results\n\n                results.forEach(object => {\n                    pipe(object)\n                    object.title = object[title]\n                    object.pinyin = pinyin.getFullChars(object.title).toLowerCase()\n                    object.session_name = sessionName(object)\n\n                    let session = this._createSession(object, type)\n                    let entry = $(tmpl.render('contact', object))\n                    let searchEntry = entry.clone().appendTo($searchPane.find('ul'))\n\n                    session.addEntry(searchEntry)\n                    session.addEntry(entry)\n                    entries = entries.add(entry)\n                })\n\n                entries.sort((x, y) => {\n                    let pyx = '' + $(x).data('py'), pyy = '' + $(y).data('py')\n\n                    return pyx > pyy ? 1 : pyx === pyy ? 0 : -1\n                }).appendTo($list)\n            })\n    },\n\n    _createSession (object, type) {\n        let session = this._sessions[object.session_name]\n\n        if (session === undefined) {\n            session = this._sessions[object.session_name] = new Session(type, object)\n        }\n\n        return session\n    },\n\n    _loadGroups () {\n        return this._loadContact({\n            api: '/api/discussions/',\n            sessionName: makeGroupSessionName,\n            title: 'name',\n            store: '_groups',\n            $list: '#group-contacts-pane ul',\n            type: GROUP_SESSION\n        }).ok(() => this._groupsLoaded = true)\n    },\n\n    activate (session) {\n        $cover.toggle(session === null)\n        if (this.currentSession === session) return\n        this.currentSession = session\n        if (this.currentSession === null) return\n\n        clearInput()\n        tmpl.renderInto('#input-bar div.extra-fields', 'extra-fields', session.extraFields())\n        session.activate()\n        toggleView(true)\n    }\n}\n\nmanager.init()\n\n// unreadManager Definition\n\nconst unreadManager = {\n\n    _count: 0,\n\n    inc (number) {\n        this._count += number\n        this._syncState()\n    },\n\n    dec (number) {\n        this._count -= number\n        this._syncState()\n    },\n\n    _syncState () {\n        if (this._count < 0) this._count = 0\n\n        $('.global.dot').toggle(this._count !== 0)\n    }\n}\n"]}